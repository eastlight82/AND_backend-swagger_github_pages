---
openapi: 3.1.0
info:
  title: 데모 프로젝트 API Document
  description: 데모 프로젝트의 API 명세서입니다.
  version: v0.0.1
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  "/quests/{questId}":
    put:
      tags:
      - quest-controller
      operationId: update
      parameters:
      - name: questId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/QuestUpdateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/QuestResponse"
    delete:
      tags:
      - quest-controller
      operationId: delete
      parameters:
      - name: questId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
  "/loss-cases/{id}":
    get:
      tags:
      - loss-case-controller
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/LossCase"
    put:
      tags:
      - loss-case-controller
      operationId: update_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LossCase"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/LossCase"
    delete:
      tags:
      - loss-case-controller
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
  "/quests":
    get:
      tags:
      - quest-controller
      operationId: list
      parameters:
      - name: lossCaseId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/QuestResponse"
    post:
      tags:
      - quest-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/QuestCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/QuestResponse"
  "/qna/questions":
    post:
      tags:
      - qna-controller
      operationId: addQuestion
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/QnaQ"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/QnaQ"
  "/qna/questions/{qId}/answers":
    get:
      tags:
      - qna-controller
      operationId: answers
      parameters:
      - name: qId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/QnaA"
    post:
      tags:
      - qna-controller
      operationId: addAnswer
      parameters:
      - name: qId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AnswerReq"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/QnaA"
  "/pretest/submit":
    post:
      tags:
      - pre-test-controller
      operationId: submit
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PreTestSubmitRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PreTestSubmitResponse"
  "/loss-cases":
    get:
      tags:
      - loss-case-controller
      operationId: list_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LossCase"
    post:
      tags:
      - loss-case-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LossCase"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/LossCase"
  "/diaries":
    get:
      tags:
      - diary-controller
      operationId: list_2
      parameters:
      - name: lossCaseId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DiaryResponse"
    post:
      tags:
      - diary-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DiaryCreateRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/DiaryResponse"
  "/chat/rooms":
    post:
      tags:
      - chat-controller
      operationId: createRoom
      parameters:
      - name: lossCaseId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ChatRoom"
  "/chat/rooms/{roomId}/messages":
    get:
      tags:
      - chat-controller
      operationId: list_3
      parameters:
      - name: roomId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ChatMessage"
    post:
      tags:
      - chat-controller
      operationId: updateMsg
      parameters:
      - name: roomId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SendReq"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ChatMessage"
  "/chat/rooms/{roomId}/close":
    post:
      tags:
      - chat-controller
      operationId: close
      parameters:
      - name: roomId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ChatRoom"
  "/auth/signup":
    post:
      tags:
      - auth-controller
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignupRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserResponse"
  "/auth/login":
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/AuthResponse"
  "/pretest/questions":
    get:
      tags:
      - pre-test-controller
      operationId: load
      parameters:
      - name: lossCaseId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PreTestListResponse"
  "/auth/me":
    get:
      tags:
      - auth-controller
      operationId: me
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserResponse"
  "/diaries/{diaryId}":
    delete:
      tags:
      - diary-controller
      operationId: delete_2
      parameters:
      - name: diaryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
components:
  schemas:
    QuestUpdateRequest:
      type: object
      properties:
        text:
          type: string
    QuestResponse:
      type: object
      properties:
        questId:
          type: integer
          format: int64
        lossCaseId:
          type: integer
          format: int64
        content:
          type: string
    LossCase:
      type: object
      properties:
        lossCaseId:
          type: integer
          format: int64
        subject:
          type: string
          enum:
          - LOVER
          - PET
          - FRIEND
          - FAMILY
        withTime:
          type: string
          enum:
          - LESS_6M
          - M6_TO_1Y
          - Y1_TO_2Y
          - Y2_TO_5Y
          - Y5_TO_10Y
          - OVER_10Y
        lossDate:
          type: string
          format: date
        lossReason:
          type: string
          enum:
          - PARTNER_LOST_FEELINGS
          - I_LOST_FEELINGS
          - PERSONALITY_GAP
          - BETRAYAL
          - SITUATIONAL
          - UNKNOWN
        copeWay:
          type: string
          enum:
          - SUPPRESS
          - EXPRESS
          - AVOID
          - ANALYZE
        photo:
          type: string
          format: byte
        users:
          "$ref": "#/components/schemas/Users"
    Users:
      type: object
      properties:
        usersId:
          type: integer
          format: int64
        email:
          type: string
        pw:
          type: string
        name:
          type: string
        age:
          type: integer
          format: int32
        gender:
          type: string
    QuestCreateRequest:
      type: object
      properties:
        lossCaseId:
          type: integer
          format: int64
        text:
          type: string
    QnaQ:
      type: object
      properties:
        text:
          type: string
        lossCase:
          "$ref": "#/components/schemas/LossCase"
        qnaQId:
          type: integer
          format: int64
    AnswerReq:
      type: object
      properties:
        content:
          type: string
    QnaA:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
        qnaQ:
          "$ref": "#/components/schemas/QnaQ"
    PreTestAnswerItem:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        optionId:
          type: integer
          format: int64
    PreTestSubmitRequest:
      type: object
      properties:
        lossCaseId:
          type: integer
          format: int64
        answers:
          type: array
          items:
            "$ref": "#/components/schemas/PreTestAnswerItem"
    PreTestSubmitResponse:
      type: object
      properties:
        lossCaseId:
          type: integer
          format: int64
        answeredCount:
          type: integer
          format: int32
        totalScore:
          type: integer
          format: int32
    DiaryCreateRequest:
      type: object
      properties:
        lossCaseId:
          type: integer
          format: int64
        text:
          type: string
    DiaryResponse:
      type: object
      properties:
        diaryId:
          type: integer
          format: int64
        lossCaseId:
          type: integer
          format: int64
        text:
          type: string
        createdAt:
          type: string
          format: date-time
    ChatRoom:
      type: object
      properties:
        chatRoomId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        lossCase:
          "$ref": "#/components/schemas/LossCase"
    SendReq:
      type: object
      properties:
        sender:
          type: string
        text:
          type: string
    ChatMessage:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sender:
          type: string
        text:
          type: string
        createdAt:
          type: string
          format: date-time
        chatRoom:
          "$ref": "#/components/schemas/ChatRoom"
    SignupRequest:
      type: object
      properties:
        email:
          type: string
          minLength: 1
        password:
          type: string
          maxLength: 64
          minLength: 8
        name:
          type: string
          minLength: 1
        age:
          type: integer
          format: int32
        gender:
          type: string
      required:
      - email
      - name
      - password
    UserResponse:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        email:
          type: string
        name:
          type: string
        age:
          type: integer
          format: int32
        gender:
          type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
      - email
      - password
    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
        tokenType:
          type: string
        user:
          "$ref": "#/components/schemas/UserResponse"
    PreTestListResponse:
      type: object
      properties:
        lossCaseId:
          type: integer
          format: int64
        questions:
          type: array
          items:
            "$ref": "#/components/schemas/PreTestQuestionRes"
    PreTestOptionRes:
      type: object
      properties:
        optionId:
          type: integer
          format: int64
        text:
          type: string
    PreTestQuestionRes:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        text:
          type: string
        score:
          type: integer
          format: int32
        options:
          type: array
          items:
            "$ref": "#/components/schemas/PreTestOptionRes"
